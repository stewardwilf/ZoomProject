{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wst15/Documents/websdk-react-app/src/components/Participant.js\",\n    _s = $RefreshSig$();\n\n//libraries/css\nimport \"./participant.css\";\nimport { Icon, Form } from 'semantic-ui-react';\nimport { useRecoilState } from 'recoil'; //shared states\n\nimport { selectedIds } from '../data/selectedIds'; //Array of IDs for pinned participants\n\nimport { liveParticipants } from \"../data/liveParticipants\"; //Array of all participants, never filtered\n\nimport { selectedParticipants } from '../data/selectedParticipants'; //Array of pinned participant objs\n//components/ functions\n\nimport { muteIndiv, accessParticipants } from './Zoom';\nexport const Participant = ({\n  idx,\n  id,\n  originalName,\n  muted,\n  isHost,\n  editMode,\n  newName,\n  setNewName,\n  saveNewName,\n  cf\n}) => {\n  _s();\n\n  const [selected, setSelected] = useRecoilState(selectedIds);\n  const [liveP] = useRecoilState(liveParticipants);\n  const [selectedAllState] = useRecoilState(selectedParticipants);\n\n  function simulateMouseover(index) {\n    //const num = index+1        \n    const event = new MouseEvent('mouseover', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n    const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + index + \") > div > div > span\");\n    const cancelled = !cb.dispatchEvent(event);\n\n    if (cancelled) {\n      // A handler called preventDefault.\n      alert(\"cancelled\");\n    } else {// None of the handlers called preventDefault.\n    }\n  } // first document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(2) > div\")\n  // second document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(3) > div\")\n\n\n  document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(2) > div > div.video-avatar__avatar-title > span\");\n  document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(3) > div > div.video-avatar__avatar-title > span\");\n\n  function simulateMouseoverUnpin(index, bool) {\n    console.log('index in simmouse', index);\n    const event = new MouseEvent('mouseover', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n    let cb;\n\n    if (bool) {\n      //if there are no non pinned elements\n      const cb = document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(\" + index + \") > div > div.video-avatar__avatar-title > span\");\n    }\n\n    if (!bool) {\n      //if there are non pinned elements                       \n      const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div:nth-child(3) > div > div:nth-child(\" + index + \") > div > div.video-avatar__avatar-title\");\n    }\n\n    console.log('cb', cb);\n    const cancelled = !cb.dispatchEvent(event);\n\n    if (cancelled) {\n      // A handler called preventDefault.\n      alert(\"cancelled\");\n    } else {// None of the handlers called preventDefault.\n    }\n  }\n\n  const handlePin = (id, idx) => {\n    if (selected.includes(id)) {\n      const index = selectedAllState.findIndex(i => i.userId === id) + 1;\n      setSelected([...selected.filter(item => item !== id)]);\n      let pinButton;\n      console.log('lll', liveP.length - selected.length);\n\n      if (index > 1) {\n        simulateMouseoverUnpin(index);\n        pinButton = document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(\" + index + \") > div > div:nth-child(4) > div > div > ul > li:nth-child(5) > a\");\n        console.log(index);\n      } else {\n        pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div:nth-child(3) > div > div > div > div.video-avatar__group > button\");\n      }\n\n      pinButton.click(); //issues with the \n    }\n\n    if (!selected.includes(id)) {\n      setSelected([...selected, id]);\n      let notSelected = liveP.filter(x => !selectedAllState.includes(x));\n      let removalIndex = notSelected.findIndex(each => each.userId === id);\n      let finalIndex = notSelected.length - removalIndex;\n      console.log(finalIndex);\n      simulateMouseover(finalIndex);\n      let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + finalIndex + \") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\");\n      pinButton.click();\n    } //const ap = accessParticipants()\n    //console.log('aplen',ap.length,'index',index, 'selectedlen',selected.length)\n    // const num = ap.length + 1 - index \n    // simulateMouseover(num)\n    // let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n    // pinButton.click()        \n\n  }; // const unpin = (index, id) => {\n  //     setSelected([...selected.filter(item => item !== id)])\n  //     const ap = accessParticipants()\n  //     const num = ap?.length + 1 - index\n  //     simulateMouseover(num)\n  //     let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n  //     pinButton.click()\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 32\n          }, this), \" \", originalName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => saveNewName(),\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              placeholder: originalName,\n              value: newName,\n              onChange: e => setNewName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n              content: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }, this), \" \", originalName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [isHost ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 32\n      }, this) : 'Guest', /*#__PURE__*/_jsxDEV(Icon, {\n        name: muted ? 'mute' : 'unmute',\n        color: muted ? 'red' : 'green',\n        onClick: () => muteIndiv(id, muted ? false : true),\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), cf && accessParticipants().length > 2 ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: 'map pin',\n        onClick: () => handlePin(id, idx),\n        size: \"large\",\n        color: selected.find(x => x === id) ? 'red' : 'green'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Participant, \"5Eapr6Ikg8n8g4Rt/CKqsO/s6ro=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Participant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"sources":["/Users/wst15/Documents/websdk-react-app/src/components/Participant.js"],"names":["Icon","Form","useRecoilState","selectedIds","liveParticipants","selectedParticipants","muteIndiv","accessParticipants","Participant","idx","id","originalName","muted","isHost","editMode","newName","setNewName","saveNewName","cf","selected","setSelected","liveP","selectedAllState","simulateMouseover","index","event","MouseEvent","view","window","bubbles","cancelable","cb","document","querySelector","cancelled","dispatchEvent","alert","simulateMouseoverUnpin","bool","console","log","handlePin","includes","findIndex","i","userId","filter","item","pinButton","length","click","notSelected","x","removalIndex","each","finalIndex","e","target","value","find"],"mappings":"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","sourcesContent":["//libraries/css\nimport \"./participant.css\";\nimport { Icon, Form } from 'semantic-ui-react';\nimport { useRecoilState } from 'recoil';\n\n//shared states\nimport { selectedIds } from '../data/selectedIds'; //Array of IDs for pinned participants\nimport { liveParticipants } from \"../data/liveParticipants\"; //Array of all participants, never filtered\nimport { selectedParticipants } from '../data/selectedParticipants'; //Array of pinned participant objs\n\n//components/ functions\nimport { muteIndiv, accessParticipants } from './Zoom';\n\nexport const Participant = ({ idx, id, originalName, muted, isHost, editMode, newName, setNewName, saveNewName, cf }) => {\n    const [selected, setSelected] = useRecoilState(selectedIds);\n    const [liveP,] = useRecoilState(liveParticipants);\n    const [selectedAllState,] = useRecoilState(selectedParticipants);\n\n\n    function simulateMouseover(index) {\n        //const num = index+1        \n        const event = new MouseEvent('mouseover', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        });\n        const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + index + \") > div > div > span\")\n        const cancelled = !cb.dispatchEvent(event);\n\n        if (cancelled) {\n            // A handler called preventDefault.\n            alert(\"cancelled\");\n        } else {\n            // None of the handlers called preventDefault.\n        }\n    }\n    // first document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(2) > div\")\n    // second document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(3) > div\")\n    document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(2) > div > div.video-avatar__avatar-title > span\")\n    document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(3) > div > div.video-avatar__avatar-title > span\")\n    function simulateMouseoverUnpin(index, bool) {\n        console.log('index in simmouse', index)\n        const event = new MouseEvent('mouseover', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        });\n        let cb\n        if (bool) {\n            //if there are no non pinned elements\n            const cb = document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(\" + index + \") > div > div.video-avatar__avatar-title > span\")\n        }\n        if (!bool) {\n            //if there are non pinned elements                       \n            const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div:nth-child(3) > div > div:nth-child(\" + index + \") > div > div.video-avatar__avatar-title\")\n        }\n\n\n        console.log('cb', cb)\n        const cancelled = !cb.dispatchEvent(event);\n\n        if (cancelled) {\n            // A handler called preventDefault.\n            alert(\"cancelled\");\n        } else {\n            // None of the handlers called preventDefault.\n        }\n    }\n\n    const handlePin = (id, idx) => {\n\n        if (selected.includes(id)) {\n            const index = selectedAllState.findIndex(i => i.userId === id) + 1\n\n            setSelected([...selected.filter(item => item !== id)]);\n            let pinButton\n            console.log('lll',liveP.length-selected.length)\n            if (index > 1) {\n                simulateMouseoverUnpin(index)\n                pinButton = document.querySelector(\"#wc-container-left > div.main-layout > div > div > div > div:nth-child(\" + index + \") > div > div:nth-child(4) > div > div > ul > li:nth-child(5) > a\")\n                console.log(index)\n            }\n            else {\n                pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div:nth-child(3) > div > div > div > div.video-avatar__group > button\")\n            }\n            pinButton.click() //issues with the \n        }\n        if (!selected.includes(id)) {\n            setSelected([...selected, id])\n\n            let notSelected = liveP.filter(x => !selectedAllState.includes(x));\n            let removalIndex = (notSelected.findIndex(each => each.userId === id))\n            let finalIndex = notSelected.length - removalIndex\n            console.log(finalIndex)\n\n            simulateMouseover(finalIndex)\n            let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + finalIndex + \") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n            pinButton.click()\n        }\n\n        //const ap = accessParticipants()\n        //console.log('aplen',ap.length,'index',index, 'selectedlen',selected.length)\n\n        // const num = ap.length + 1 - index \n        // simulateMouseover(num)\n        // let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n        // pinButton.click()        \n    }\n\n    // const unpin = (index, id) => {\n    //     setSelected([...selected.filter(item => item !== id)])\n    //     const ap = accessParticipants()\n    //     const num = ap?.length + 1 - index\n    //     simulateMouseover(num)\n    //     let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n    //     pinButton.click()\n    // }\n\n    return (\n        <div className='participant'>\n            <div className='left'>\n                {\n                    (editMode) ?\n                        <div className='edit-form'>\n\n                            <p><b>Name: </b> {originalName} </p>\n\n                            <Form onSubmit={() => saveNewName()}>\n                                <Form.Group>\n                                    <Form.Input\n                                        placeholder={originalName}\n                                        value={newName}\n                                        onChange={(e) => setNewName(e.target.value)}\n                                    />\n                                    <Form.Button content='Submit' />\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        :\n                        <p className='name'><b>Name: </b> {originalName} </p>\n\n                }\n            </div>\n            <div className='right'>\n                {\n                    (isHost) ? <b>Host</b> : 'Guest'\n                }\n                <Icon\n                    name={muted ? 'mute' : 'unmute'}\n                    color={muted ? 'red' : 'green'}\n                    onClick={() => muteIndiv(id, muted ? false : true)}\n                    size='large'\n                ></Icon>\n\n                {\n                    cf && accessParticipants().length > 2 ?\n                        <Icon\n                            name={'map pin'}\n                            onClick={() => handlePin(id, idx)}\n                            size='large'\n                            color={selected.find(x => x === id) ? 'red' : 'green'}\n                        ></Icon>\n                        : ''\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}