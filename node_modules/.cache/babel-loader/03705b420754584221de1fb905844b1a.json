{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wst15/Documents/websdk-react-app/src/components/Participant.js\",\n    _s = $RefreshSig$();\n\nimport \"./participant.css\";\nimport { Icon, Form } from 'semantic-ui-react';\nimport { muteIndiv } from './Zoom';\nimport { accessParticipants } from './Zoom';\nimport { selected as selectedp } from '../data/selected';\nimport { useRecoilState } from 'recoil';\nimport { liveParticipants } from \"../data/liveParticipants\";\nexport const Participant = ({\n  idx,\n  id,\n  originalName,\n  muted,\n  isHost,\n  editMode,\n  newName,\n  setNewName,\n  saveNewName,\n  cf\n}) => {\n  _s();\n\n  var _accessParticipants;\n\n  const [selected, setSelected] = useRecoilSt;\n  const [liveP, setLiveP] = useRecoilState(liveParticipants);\n  ate(selectedp);\n\n  function simulateMouseover(index) {\n    //const num = index+1        \n    const event = new MouseEvent('mouseover', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n    const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + index + \") > div > div > span\");\n    const cancelled = !cb.dispatchEvent(event);\n\n    if (cancelled) {\n      // A handler called preventDefault.\n      alert(\"cancelled\");\n    } else {// None of the handlers called preventDefault.\n    }\n  }\n\n  const handlePin = id => {\n    //is this in selected?\n    //if yes:\n    //*******DONE*******remove from selected \n    //calculate relevant number = ???\n    //unpin relevant number from middle canvas\n    //if no:\n    //*******DONE*******add to selected\n    //calculate relevant number = liveParticipants minus selected IDs\n    //pin relevant number from top canvas\n    if (selected.includes(id)) {\n      setSelected([...selected.filter(item => item !== id)]);\n      console.log('id has been selected before');\n    }\n\n    if (!selected.includes(id)) {\n      setSelected([...selected, id]);\n      console.log('id has NOT been selected before');\n      let combined = liveP.every(c => selected.find(e => e === c.userId));\n      console.log(combined);\n    }\n\n    const ap = accessParticipants(); //console.log('aplen',ap.length,'index',index, 'selectedlen',selected.length)\n    // const num = ap.length + 1 - index \n    // simulateMouseover(num)\n    // let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n    // pinButton.click()        \n  }; // const unpin = (index, id) => {\n  //     setSelected([...selected.filter(item => item !== id)])\n  //     const ap = accessParticipants()\n  //     const num = ap?.length + 1 - index\n  //     simulateMouseover(num)\n  //     let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n  //     pinButton.click()\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 32\n          }, this), \" \", originalName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => saveNewName(),\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              placeholder: originalName,\n              value: newName,\n              onChange: e => setNewName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n              content: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }, this), \" \", originalName, \" ap: \", (_accessParticipants = accessParticipants()) === null || _accessParticipants === void 0 ? void 0 : _accessParticipants.length, \" index : \", idx, \" sel: \", selected.length, \" \", accessParticipants().length - idx - selected.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [isHost ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }, this) : 'Guest', /*#__PURE__*/_jsxDEV(Icon, {\n        name: muted ? 'mute' : 'unmute',\n        color: muted ? 'red' : 'green',\n        onClick: () => muteIndiv(id, muted ? false : true),\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), cf && accessParticipants().length > 2 ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: 'map pin',\n        onClick: () => handlePin(id),\n        size: \"large\",\n        color: selected.find(x => x === id) ? 'red' : 'green'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Participant, \"8kEeY+nSS2NEYZJCW4B8GRrGkR4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Participant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"sources":["/Users/wst15/Documents/websdk-react-app/src/components/Participant.js"],"names":["Icon","Form","muteIndiv","accessParticipants","selected","selectedp","useRecoilState","liveParticipants","Participant","idx","id","originalName","muted","isHost","editMode","newName","setNewName","saveNewName","cf","setSelected","useRecoilSt","liveP","setLiveP","ate","simulateMouseover","index","event","MouseEvent","view","window","bubbles","cancelable","cb","document","querySelector","cancelled","dispatchEvent","alert","handlePin","includes","filter","item","console","log","combined","every","c","find","e","userId","ap","target","value","length","x"],"mappings":"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","sourcesContent":["import \"./participant.css\";\nimport { Icon, Form } from 'semantic-ui-react'\nimport { muteIndiv } from './Zoom'\nimport { accessParticipants } from './Zoom'\nimport { selected as selectedp } from '../data/selected'\nimport { useRecoilState } from 'recoil'\nimport { liveParticipants } from \"../data/liveParticipants\";\n\nexport const Participant = ({ idx, id, originalName, muted, isHost, editMode, newName, setNewName, saveNewName, cf }) => {\n    const [selected, setSelected] = useRecoilSt    \n    const [liveP, setLiveP] = useRecoilState(liveParticipants);\n    ate(selectedp);\n\n    function simulateMouseover(index) {\n        //const num = index+1        \n        const event = new MouseEvent('mouseover', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        });\n        const cb = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\" + index + \") > div > div > span\")\n        const cancelled = !cb.dispatchEvent(event);\n\n        if (cancelled) {\n            // A handler called preventDefault.\n            alert(\"cancelled\");\n        } else {\n            // None of the handlers called preventDefault.\n        }\n    }\n\n    const handlePin = (id) => {\n        //is this in selected?\n            //if yes:\n                //*******DONE*******remove from selected \n                //calculate relevant number = ???\n                //unpin relevant number from middle canvas\n                \n            //if no:\n                //*******DONE*******add to selected\n                //calculate relevant number = liveParticipants minus selected IDs\n                //pin relevant number from top canvas\n                \n\n        if (selected.includes(id)){\n            setSelected([...selected.filter(item => item !== id)])\n            console.log('id has been selected before')\n        }\n        if (!selected.includes(id)){\n            setSelected([...selected, id])\n            console.log('id has NOT been selected before')\n            let combined = liveP.every(c => selected.find(e=>e===c.userId));\n            console.log(combined)\n\n        }\n        \n        const ap = accessParticipants()\n        //console.log('aplen',ap.length,'index',index, 'selectedlen',selected.length)\n\n        // const num = ap.length + 1 - index \n        // simulateMouseover(num)\n        // let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n        // pinButton.click()        \n    }\n\n    // const unpin = (index, id) => {\n    //     setSelected([...selected.filter(item => item !== id)])\n    //     const ap = accessParticipants()\n    //     const num = ap?.length + 1 - index\n    //     simulateMouseover(num)\n    //     let pinButton = document.querySelector(\"#wc-container-left > div:nth-child(3) > div > div.speaker-bar-container__horizontal-view-wrap > div:nth-child(\"+num+\") > div > div:nth-child(3) > div > div > ul > li:nth-child(5) > a\")\n    //     pinButton.click()\n    // }\n\n    return (\n        <div className='participant'>\n            <div className='left'>\n                {\n                    (editMode) ?\n                        <div className='edit-form'>\n\n                            <p><b>Name: </b> {originalName} </p>\n\n                            <Form onSubmit={() => saveNewName()}>\n                                <Form.Group>\n                                    <Form.Input\n                                        placeholder={originalName}\n                                        value={newName}\n                                        onChange={(e) => setNewName(e.target.value)}\n                                    />\n                                    <Form.Button content='Submit' />\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        :\n                        <p className='name'><b>Name: </b> {originalName} ap: {accessParticipants()?.length} index : {idx} sel: {selected.length} {accessParticipants().length - idx - selected.length}</p>\n\n                }\n            </div>\n            <div className='right'>\n                {\n                    (isHost) ? <b>Host</b> : 'Guest'\n                }\n                <Icon\n                    name={muted ? 'mute' : 'unmute'}\n                    color={muted ? 'red' : 'green'}\n                    onClick={() => muteIndiv(id, muted ? false : true)}\n                    size='large'\n                ></Icon>\n\n                {\n                    cf && accessParticipants().length > 2 ?\n                        <Icon\n                            name={'map pin'}\n                            onClick={() => handlePin(id)}\n                            size='large'\n                            color={selected.find(x => x === id) ? 'red' : 'green'}\n                        ></Icon>\n                        : ''\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}