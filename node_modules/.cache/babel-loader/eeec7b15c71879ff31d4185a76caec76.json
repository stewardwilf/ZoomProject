{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wst15/Documents/websdk-react-app/src/components/Participant.js\";\nimport \"./participant.css\";\nimport { Icon } from 'semantic-ui-react';\nimport { muteIndiv } from './Zoom';\nexport const Participant = ({\n  id,\n  originalName,\n  muted,\n  isHost,\n  editMode,\n  newName,\n  setNewName,\n  saveNewName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Current name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 28\n          }, this), \" \", originalName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newName,\n          onChange: e => setNewName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => saveNewName(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Current name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 41\n        }, this), \" \", originalName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [isHost ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"host\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Host\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        name: muted ? 'mute' : 'unmute',\n        color: muted ? 'red' : 'green',\n        onClick: () => muteIndiv(id, muted ? false : true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Participant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"sources":["/Users/wst15/Documents/websdk-react-app/src/components/Participant.js"],"names":["Icon","muteIndiv","Participant","id","originalName","muted","isHost","editMode","newName","setNewName","saveNewName","e","target","value"],"mappings":";;AAAA,OAAO,mBAAP;AACA,SAASA,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,YAAN;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA,OAA7C;AAAsDC,EAAAA,UAAtD;AAAkEC,EAAAA;AAAlE,CAAD,KAAqF;AAC5G,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAESH,QAAD,gBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEI;AAAA,kCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,OAA0BH,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEI,OAA1B;AAAmC,UAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAE,MAAMH,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBASI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,OAA2CN,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAXZ;AAAA;AAAA;AAAA;AAAA,YADA,eAeI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBAEKE,MAAD,gBAAW;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,cAAX,gBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFrD,eAIA,QAAC,IAAD;AACI,QAAA,IAAI,EAAED,KAAK,GAAG,MAAH,GAAY,QAD3B;AAEI,QAAA,KAAK,EAAEA,KAAK,GAAG,KAAH,GAAW,OAF3B;AAGI,QAAA,OAAO,EAAE,MAAMJ,SAAS,CAACE,EAAD,EAAKE,KAAK,GAAG,KAAH,GAAW,IAArB;AAH5B;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA7BM;KAAMH,W","sourcesContent":["import \"./participant.css\";\nimport { Icon } from 'semantic-ui-react'\nimport { muteIndiv } from './Zoom'\n\nexport const Participant = ({ id, originalName, muted, isHost, editMode, newName, setNewName, saveNewName }) => {\n    return (\n        <div className='participant'>\n        <div className='left'>\n            {\n                (editMode) ?\n                    <div className='edit-form'>\n\n                        <p><b>Current name: </b> {originalName}</p>\n                        <input type='text' value={newName} onChange={(e) => setNewName(e.target.value)} />\n                        <button onClick={() => saveNewName()}>Save</button>\n\n                    </div>\n                    :\n                    <p className='name'><b>Current name: </b> {originalName}</p>\n            }\n            </div>\n            <div className='right'>\n            {\n                (isHost) ? <p className='host'><b>Host</b></p> : <p>Guest</p>\n            }\n            <Icon\n                name={muted ? 'mute' : 'unmute'}\n                color={muted ? 'red' : 'green'}\n                onClick={() => muteIndiv(id, muted ? false : true)}\n            ></Icon>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}